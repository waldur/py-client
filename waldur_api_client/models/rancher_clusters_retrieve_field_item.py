from enum import Enum


class RancherClustersRetrieveFieldItem(str, Enum):
    ACCESS_URL = "access_url"
    BACKEND_ID = "backend_id"
    CAPACITY = "capacity"
    CREATED = "created"
    CUSTOMER = "customer"
    CUSTOMER_ABBREVIATION = "customer_abbreviation"
    CUSTOMER_NAME = "customer_name"
    CUSTOMER_NATIVE_NAME = "customer_native_name"
    DESCRIPTION = "description"
    ERROR_MESSAGE = "error_message"
    ERROR_TRACEBACK = "error_traceback"
    INSTALL_LONGHORN = "install_longhorn"
    IS_LIMIT_BASED = "is_limit_based"
    IS_USAGE_BASED = "is_usage_based"
    KUBERNETES_VERSION = "kubernetes_version"
    MANAGEMENT_SECURITY_GROUP = "management_security_group"
    MARKETPLACE_CATEGORY_NAME = "marketplace_category_name"
    MARKETPLACE_CATEGORY_UUID = "marketplace_category_uuid"
    MARKETPLACE_OFFERING_NAME = "marketplace_offering_name"
    MARKETPLACE_OFFERING_PLUGIN_OPTIONS = "marketplace_offering_plugin_options"
    MARKETPLACE_OFFERING_UUID = "marketplace_offering_uuid"
    MARKETPLACE_PLAN_UUID = "marketplace_plan_uuid"
    MARKETPLACE_RESOURCE_STATE = "marketplace_resource_state"
    MARKETPLACE_RESOURCE_UUID = "marketplace_resource_uuid"
    MODIFIED = "modified"
    NAME = "name"
    NODES = "nodes"
    PROJECT = "project"
    PROJECT_NAME = "project_name"
    PROJECT_UUID = "project_uuid"
    PUBLIC_IPS = "public_ips"
    REQUESTED = "requested"
    RESOURCE_TYPE = "resource_type"
    ROUTER_IPS = "router_ips"
    RUNTIME_STATE = "runtime_state"
    SECURITY_GROUPS = "security_groups"
    SERVICE_NAME = "service_name"
    SERVICE_SETTINGS = "service_settings"
    SERVICE_SETTINGS_ERROR_MESSAGE = "service_settings_error_message"
    SERVICE_SETTINGS_STATE = "service_settings_state"
    SERVICE_SETTINGS_UUID = "service_settings_uuid"
    SSH_PUBLIC_KEY = "ssh_public_key"
    STATE = "state"
    TENANT = "tenant"
    TENANT_UUID = "tenant_uuid"
    URL = "url"
    UUID = "uuid"
    VM_PROJECT = "vm_project"

    def __str__(self) -> str:
        return str(self.value)
